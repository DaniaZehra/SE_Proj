{"version":3,"file":"surveys-extension-utils.jsx","sourceRoot":"","sources":["../../../../src/extensions/surveys/surveys-extension-utils.tsx"],"names":[],"mappings":"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","sourcesContent":["import { VNode, cloneElement, createContext } from 'preact'\nimport { PostHog } from '../../posthog-core'\nimport {\n    MultipleSurveyQuestion,\n    Survey,\n    SurveyAppearance,\n    SurveyPosition,\n    SurveyQuestion,\n    SurveySchedule,\n} from '../../posthog-surveys-types'\nimport { document as _document, window as _window, userAgent } from '../../utils/globals'\nimport { SURVEY_LOGGER as logger, SURVEY_IN_PROGRESS_PREFIX, SURVEY_SEEN_PREFIX } from '../../utils/survey-utils'\nimport { isNullish, isArray } from '../../utils/type-utils'\nimport { prepareStylesheet } from '../utils/stylesheet-loader'\n\nimport { SurveyMatchType } from '../../posthog-surveys-types'\nimport { isMatchingRegex } from '../../utils/regex-utils'\nimport { detectDeviceType } from '../../utils/user-agent-utils'\n// We cast the types here which is dangerous but protected by the top level generateSurveys call\nconst window = _window as Window & typeof globalThis\nconst document = _document as Document\n\nexport function getFontFamily(fontFamily?: string): string {\n    if (fontFamily === 'inherit') {\n        return 'inherit'\n    }\n\n    const defaultFontStack =\n        'BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Roboto\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"'\n    return fontFamily ? `${fontFamily}, ${defaultFontStack}` : `-apple-system, ${defaultFontStack}`\n}\n\nexport function getSurveyResponseKey(questionId: string) {\n    return `$survey_response_${questionId}`\n}\n\nexport const defaultSurveyAppearance = {\n    backgroundColor: '#eeeded',\n    submitButtonColor: 'black',\n    submitButtonTextColor: 'white',\n    ratingButtonColor: 'white',\n    ratingButtonActiveColor: 'black',\n    borderColor: '#c9c6c6',\n    placeholder: 'Start typing...',\n    whiteLabel: false,\n    displayThankYouMessage: true,\n    thankYouMessageHeader: 'Thank you for your feedback!',\n    position: SurveyPosition.Right,\n    widgetColor: '#e0a045',\n    zIndex: '2147483647',\n    disabledButtonOpacity: '0.6',\n    maxWidth: '300px',\n} as const\n\nexport const style = (appearance: SurveyAppearance | null) => {\n    const positions = {\n        [SurveyPosition.Left]: 'left: 30px;',\n        [SurveyPosition.Right]: 'right: 60px;',\n        [SurveyPosition.Center]: `\n            left: 50%;\n            transform: translateX(-50%);\n          `,\n        [SurveyPosition.NextToTrigger]: 'right: 30px;',\n    }\n\n    const styles = `\n          .survey-form, .thank-you-message {\n              position: fixed;\n              margin: 0px;\n              bottom: 0px;\n              color: black;\n              font-weight: normal;\n              font-family: ${getFontFamily(appearance?.fontFamily)};\n              text-align: left;\n              max-width: ${appearance?.maxWidth || defaultSurveyAppearance.maxWidth};\n              width: 100%;\n              z-index: ${appearance?.zIndex || defaultSurveyAppearance.zIndex};\n              border: 1.5px solid ${appearance?.borderColor || '#c9c6c6'};\n              border-bottom: 0px;\n              ${appearance?.position ? positions[appearance.position] : positions[SurveyPosition.Right]}\n              flex-direction: column;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n              border-top-left-radius: 10px;\n              border-top-right-radius: 10px;\n              box-shadow: -6px 0 16px -8px rgb(0 0 0 / 8%), -9px 0 28px 0 rgb(0 0 0 / 5%), -12px 0 48px 16px rgb(0 0 0 / 3%);\n          }\n\n          .survey-box, .thank-you-message-container {\n              padding: 20px 25px 10px;\n              display: flex;\n              flex-direction: column;\n              border-radius: 10px;\n          }\n\n          .thank-you-message {\n              text-align: center;\n          }\n\n          .form-submit[disabled] {\n              opacity: ${appearance?.disabledButtonOpacity || '0.6'};\n              filter: grayscale(50%);\n              cursor: not-allowed;\n          }\n          .survey-form textarea {\n              color: #2d2d2d;\n              font-size: 14px;\n              font-family: ${getFontFamily(appearance?.fontFamily)};\n              background: white;\n              color: black;\n              outline: none;\n              padding-left: 10px;\n              padding-right: 10px;\n              padding-top: 10px;\n              border-radius: 6px;\n              border-color: ${appearance?.borderColor || '#c9c6c6'};\n              margin-top: 14px;\n              width: 100%;\n              box-sizing: border-box;\n          }\n          .survey-box:has(.survey-question:empty):not(:has(.survey-question-description)) textarea {\n              margin-top: 0;\n          }\n          .form-submit {\n              box-sizing: border-box;\n              margin: 0;\n              font-family: inherit;\n              overflow: visible;\n              text-transform: none;\n              position: relative;\n              display: inline-block;\n              font-weight: 700;\n              white-space: nowrap;\n              text-align: center;\n              border: 1.5px solid transparent;\n              cursor: pointer;\n              user-select: none;\n              touch-action: manipulation;\n              padding: 12px;\n              font-size: 14px;\n              border-radius: 6px;\n              outline: 0;\n              background: ${appearance?.submitButtonColor || 'black'} !important;\n              text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);\n              box-shadow: 0 2px 0 rgba(0, 0, 0, 0.045);\n              width: 100%;\n          }\n          .form-cancel {\n              border: 1.5px solid ${appearance?.borderColor || '#c9c6c6'};\n              background: white;\n              border-radius: 100%;\n              line-height: 0;\n              cursor: pointer;\n              padding: 12px;\n              position: absolute;\n              top: 0;\n              right: 0;\n              transform: translate(50%, -50%);\n          }\n          .bolded { font-weight: 600; }\n          .buttons {\n              display: flex;\n              justify-content: center;\n          }\n          .footer-branding {\n              font-size: 11px;\n              margin-top: 10px;\n              text-align: center;\n              display: flex;\n              justify-content: center;\n              gap: 4px;\n              align-items: center;\n              font-weight: 500;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n              text-decoration: none;\n              backgroundColor: ${appearance?.backgroundColor || '#eeeded'};\n              color: ${getContrastingTextColor(appearance?.backgroundColor || '#eeeded')};\n          }\n          .survey-question {\n              font-weight: 500;\n              font-size: 14px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .question-textarea-wrapper {\n              display: flex;\n              flex-direction: column;\n          }\n          .survey-question-description {\n              font-size: 13px;\n              padding-top: 5px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .ratings-number {\n              font-size: 16px;\n              font-weight: 600;\n              padding: 8px 0px;\n              border: none;\n          }\n          .ratings-number:hover {\n              cursor: pointer;\n          }\n          .rating-options {\n              margin-top: 14px;\n          }\n          .rating-options-number {\n              display: grid;\n              border-radius: 6px;\n              overflow: hidden;\n              border: 1.5px solid ${appearance?.borderColor || '#c9c6c6'};\n          }\n          .rating-options-number > .ratings-number {\n              border-right: 1px solid ${appearance?.borderColor || '#c9c6c6'};\n          }\n          .rating-options-number > .ratings-number:last-of-type {\n              border-right: 0px;\n          }\n          .rating-options-number .rating-active {\n              background: ${appearance?.ratingButtonActiveColor || 'black'};\n          }\n          .rating-options-emoji {\n              display: flex;\n              justify-content: space-between;\n          }\n          .ratings-emoji {\n              font-size: 16px;\n              background-color: transparent;\n              border: none;\n              padding: 0px;\n          }\n          .ratings-emoji:hover {\n              cursor: pointer;\n          }\n          .ratings-emoji.rating-active svg {\n              fill: ${appearance?.ratingButtonActiveColor || 'black'};\n          }\n          .emoji-svg {\n              fill: '#939393';\n          }\n          .rating-text {\n              display: flex;\n              flex-direction: row;\n              font-size: 11px;\n              justify-content: space-between;\n              margin-top: 6px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n              opacity: .60;\n          }\n          .limit-height {\n              max-height: 300px;\n              overflow: auto;\n              scrollbar-width: thin;\n              scrollbar-color: ${appearance?.borderColor || '#c9c6c6'} ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .multiple-choice-options {\n              margin-top: 13px;\n              font-size: 14px;\n          }\n          .survey-box:has(.survey-question:empty):not(:has(.survey-question-description)) .multiple-choice-options {\n              margin-top: 0;\n          }\n          .multiple-choice-options .choice-option {\n              display: flex;\n              align-items: center;\n              gap: 4px;\n              font-size: 13px;\n              cursor: pointer;\n              margin-bottom: 5px;\n              position: relative;\n          }\n          .multiple-choice-options > .choice-option:last-of-type {\n              margin-bottom: 0px;\n          }\n          .multiple-choice-options input {\n              cursor: pointer;\n              position: absolute;\n              opacity: 0;\n          }\n          .choice-check {\n              position: absolute;\n              right: 10px;\n              background: white;\n          }\n          .choice-check svg {\n              display: none;\n          }\n          .multiple-choice-options .choice-option:hover .choice-check svg {\n              display: inline-block;\n              opacity: .25;\n          }\n          .multiple-choice-options input:checked + label + .choice-check svg {\n              display: inline-block;\n              opacity: 100% !important;\n          }\n          .multiple-choice-options input:checked + label {\n              font-weight: bold;\n              border: 1.5px solid rgba(0,0,0);\n          }\n          .multiple-choice-options input:checked + label input {\n              font-weight: bold;\n          }\n          .multiple-choice-options label {\n              width: 100%;\n              cursor: pointer;\n              padding: 10px;\n              border: 1.5px solid rgba(0,0,0,.25);\n              border-radius: 4px;\n              background: white;\n          }\n          .multiple-choice-options .choice-option-open label {\n              padding-right: 30px;\n              display: flex;\n              flex-wrap: wrap;\n              gap: 8px;\n              max-width: 100%;\n          }\n          .multiple-choice-options .choice-option-open label span {\n              width: 100%;\n          }\n          .multiple-choice-options .choice-option-open input:disabled + label {\n              opacity: 0.6;\n          }\n          .multiple-choice-options .choice-option-open label input {\n              position: relative;\n              opacity: 1;\n              flex-grow: 1;\n              border: 0;\n              outline: 0;\n          }\n          .thank-you-message-body {\n              margin-top: 6px;\n              font-size: 14px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .thank-you-message-header {\n              margin: 10px 0px 0px;\n              background: ${appearance?.backgroundColor || '#eeeded'};\n          }\n          .thank-you-message-container .form-submit {\n              margin-top: 20px;\n              margin-bottom: 10px;\n          }\n          .thank-you-message-countdown {\n              margin-left: 6px;\n          }\n          .bottom-section {\n              margin-top: 14px;\n          }\n          `\n\n    return styles\n        .replace(/[\\n\\r\\t]+/g, ' ') // remove newlines/tabs\n        .replace(/\\s{2,}/g, ' ') // collapse extra spaces\n        .trim()\n}\n\nexport const addSurveyCSSVariablesToElement = (element: HTMLDivElement, appearance?: SurveyAppearance | null) => {\n    const effectiveAppearance = { ...defaultSurveyAppearance, ...appearance }\n    const hostStyle = element.style\n\n    hostStyle.setProperty('--ph-survey-font-family', getFontFamily(effectiveAppearance.fontFamily))\n    hostStyle.setProperty('--ph-survey-max-width', effectiveAppearance.maxWidth)\n    hostStyle.setProperty('--ph-survey-z-index', effectiveAppearance.zIndex)\n    hostStyle.setProperty('--ph-survey-border-color', effectiveAppearance.borderColor)\n    hostStyle.setProperty('--ph-survey-background-color', effectiveAppearance.backgroundColor)\n    hostStyle.setProperty('--ph-survey-disabled-button-opacity', effectiveAppearance.disabledButtonOpacity)\n    hostStyle.setProperty('--ph-survey-submit-button-color', effectiveAppearance.submitButtonColor)\n    hostStyle.setProperty(\n        '--ph-survey-submit-button-text-color',\n        getContrastingTextColor(effectiveAppearance.submitButtonColor)\n    )\n    hostStyle.setProperty('--ph-survey-rating-active-color', effectiveAppearance.ratingButtonActiveColor)\n    hostStyle.setProperty(\n        '--ph-survey-text-primary-color',\n        getContrastingTextColor(effectiveAppearance.backgroundColor)\n    )\n    hostStyle.setProperty('--ph-widget-color', effectiveAppearance.widgetColor)\n    hostStyle.setProperty('--ph-widget-text-color', getContrastingTextColor(effectiveAppearance.widgetColor))\n    hostStyle.setProperty('--ph-widget-z-index', effectiveAppearance.zIndex)\n\n    // Adjust input/choice background slightly if main background is white\n    if (effectiveAppearance.backgroundColor === 'white') {\n        hostStyle.setProperty('--ph-survey-input-background', '#f8f8f8')\n        hostStyle.setProperty('--ph-survey-choice-background', '#fdfdfd')\n        hostStyle.setProperty('--ph-survey-choice-background-hover', '#f9f9f9')\n    } else {\n        hostStyle.setProperty('--ph-survey-input-background', 'white') // Default if not white\n        hostStyle.setProperty('--ph-survey-choice-background', 'white') // Default if not white\n        hostStyle.setProperty('--ph-survey-choice-background-hover', '#fcfcfc') // Default if not white\n    }\n}\n\nfunction nameToHex(name: string) {\n    return {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        'indianred ': '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrodyellow: '#fafad2',\n        lightgrey: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370d8',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#d87093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32',\n    }[name.toLowerCase()]\n}\n\nfunction hex2rgb(c: string) {\n    if (c[0] === '#') {\n        const hexColor = c.replace(/^#/, '')\n        const r = parseInt(hexColor.slice(0, 2), 16)\n        const g = parseInt(hexColor.slice(2, 4), 16)\n        const b = parseInt(hexColor.slice(4, 6), 16)\n        return 'rgb(' + r + ',' + g + ',' + b + ')'\n    }\n    return 'rgb(255, 255, 255)'\n}\n\nexport function getContrastingTextColor(color: string = defaultSurveyAppearance.backgroundColor) {\n    let rgb\n    if (color[0] === '#') {\n        rgb = hex2rgb(color)\n    }\n    if (color.startsWith('rgb')) {\n        rgb = color\n    }\n    // otherwise it's a color name\n    const nameColorToHex = nameToHex(color)\n    if (nameColorToHex) {\n        rgb = hex2rgb(nameColorToHex)\n    }\n    if (!rgb) {\n        return 'black'\n    }\n    const colorMatch = rgb.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)\n    if (colorMatch) {\n        const r = parseInt(colorMatch[1])\n        const g = parseInt(colorMatch[2])\n        const b = parseInt(colorMatch[3])\n        const hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b))\n        return hsp > 127.5 ? 'black' : 'white'\n    }\n    return 'black'\n}\n\nexport const createShadow = (styleSheet: string, surveyId: string, element?: Element, posthog?: PostHog) => {\n    const div = document.createElement('div')\n    div.className = getSurveyContainerClass({ id: surveyId })\n    const shadow = div.attachShadow({ mode: 'open' })\n    if (styleSheet) {\n        const styleElement = prepareStylesheet(document, styleSheet, posthog)\n        if (styleElement) {\n            shadow.appendChild(styleElement)\n        }\n    }\n    ;(element ? element : document.body).appendChild(div)\n    return shadow\n}\n\ninterface SendSurveyEventArgs {\n    responses: Record<string, string | number | string[] | null>\n    survey: Survey\n    surveySubmissionId: string\n    isSurveyCompleted: boolean\n    posthog?: PostHog\n}\n\nconst getSurveyResponseValue = (responses: Record<string, string | number | string[] | null>, questionId?: string) => {\n    if (!questionId) {\n        return null\n    }\n    const response = responses[getSurveyResponseKey(questionId)]\n    if (isArray(response)) {\n        return [...response]\n    }\n    return response\n}\n\nexport const sendSurveyEvent = ({\n    responses,\n    survey,\n    surveySubmissionId,\n    posthog,\n    isSurveyCompleted,\n}: SendSurveyEventArgs) => {\n    if (!posthog) {\n        logger.error('[survey sent] event not captured, PostHog instance not found.')\n        return\n    }\n\n    // Mark as seen in localStorage regardless of completion status\n    localStorage.setItem(getSurveySeenKey(survey), 'true')\n\n    // Send the event payload\n    posthog.capture('survey sent', {\n        $survey_name: survey.name,\n        $survey_id: survey.id,\n        $survey_iteration: survey.current_iteration,\n        $survey_iteration_start_date: survey.current_iteration_start_date,\n        $survey_questions: survey.questions.map((question) => ({\n            id: question.id,\n            question: question.question,\n            response: getSurveyResponseValue(responses, question.id),\n        })),\n        $survey_submission_id: surveySubmissionId,\n        $survey_completed: isSurveyCompleted,\n        sessionRecordingUrl: posthog.get_session_replay_url?.(),\n        ...responses,\n        $set: {\n            [getSurveyInteractionProperty(survey, 'responded')]: true,\n        },\n    })\n\n    if (isSurveyCompleted) {\n        // Only dispatch PHSurveySent if the survey is completed, as that removes the survey from focus\n        window.dispatchEvent(new CustomEvent('PHSurveySent', { detail: { surveyId: survey.id } }))\n        clearInProgressSurveyState(survey)\n    }\n}\n\nexport const dismissedSurveyEvent = (survey: Survey, posthog?: PostHog, readOnly?: boolean) => {\n    if (!posthog) {\n        logger.error('[survey dismissed] event not captured, PostHog instance not found.')\n        return\n    }\n    if (readOnly) {\n        return\n    }\n\n    const inProgressSurvey = getInProgressSurveyState(survey)\n\n    // Send dismissal event\n    posthog.capture('survey dismissed', {\n        $survey_name: survey.name,\n        $survey_id: survey.id,\n        $survey_iteration: survey.current_iteration,\n        $survey_iteration_start_date: survey.current_iteration_start_date,\n        // check if the survey is partially completed\n        $survey_partially_completed:\n            Object.values(inProgressSurvey?.responses || {}).filter((resp) => !isNullish(resp)).length > 0,\n        sessionRecordingUrl: posthog.get_session_replay_url?.(),\n        ...inProgressSurvey?.responses,\n        $survey_submission_id: inProgressSurvey?.surveySubmissionId,\n        $survey_questions: survey.questions.map((question) => ({\n            id: question.id,\n            question: question.question,\n            response: getSurveyResponseValue(inProgressSurvey?.responses || {}, question.id),\n        })),\n        $set: {\n            [getSurveyInteractionProperty(survey, 'dismissed')]: true,\n        },\n    })\n\n    // Clear in-progress state on dismissal\n    clearInProgressSurveyState(survey)\n    localStorage.setItem(getSurveySeenKey(survey), 'true')\n    window.dispatchEvent(new CustomEvent('PHSurveyClosed', { detail: { surveyId: survey.id } }))\n}\n\n// Use the Fisher-yates algorithm to shuffle this array\n// https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\nexport const shuffle = (array: any[]) => {\n    return array\n        .map((a) => ({ sort: Math.floor(Math.random() * 10), value: a }))\n        .sort((a, b) => a.sort - b.sort)\n        .map((a) => a.value)\n}\n\nconst reverseIfUnshuffled = (unshuffled: any[], shuffled: any[]): any[] => {\n    if (unshuffled.length === shuffled.length && unshuffled.every((val, index) => val === shuffled[index])) {\n        return shuffled.reverse()\n    }\n\n    return shuffled\n}\n\nexport const getDisplayOrderChoices = (question: MultipleSurveyQuestion): string[] => {\n    if (!question.shuffleOptions) {\n        return question.choices\n    }\n\n    const displayOrderChoices = question.choices\n    let openEndedChoice = ''\n    if (question.hasOpenChoice) {\n        // if the question has an open-ended choice, its always the last element in the choices array.\n        openEndedChoice = displayOrderChoices.pop()!\n    }\n\n    const shuffledOptions = reverseIfUnshuffled(displayOrderChoices, shuffle(displayOrderChoices))\n\n    if (question.hasOpenChoice) {\n        question.choices.push(openEndedChoice)\n        shuffledOptions.push(openEndedChoice)\n    }\n\n    return shuffledOptions\n}\n\nexport const getDisplayOrderQuestions = (survey: Survey): SurveyQuestion[] => {\n    if (!survey.appearance || !survey.appearance.shuffleQuestions || survey.enable_partial_responses) {\n        return survey.questions\n    }\n\n    return reverseIfUnshuffled(survey.questions, shuffle(survey.questions))\n}\n\nexport const hasEvents = (survey: Pick<Survey, 'conditions'>): boolean => {\n    return survey.conditions?.events?.values?.length != undefined && survey.conditions?.events?.values?.length > 0\n}\n\nexport const canActivateRepeatedly = (\n    survey: Pick<Survey, 'schedule' | 'conditions' | 'id' | 'current_iteration'>\n): boolean => {\n    return (\n        !!(survey.conditions?.events?.repeatedActivation && hasEvents(survey)) ||\n        survey.schedule === SurveySchedule.Always ||\n        isSurveyInProgress(survey)\n    )\n}\n\n/**\n * getSurveySeen checks local storage for the surveySeen Key a\n * and overrides this value if the survey can be repeatedly activated by its events.\n * @param survey\n */\nexport const getSurveySeen = (survey: Survey): boolean => {\n    const surveySeen = localStorage.getItem(getSurveySeenKey(survey))\n    if (surveySeen) {\n        // if a survey has already been seen,\n        // we will override it with the event repeated activation value.\n        return !canActivateRepeatedly(survey)\n    }\n\n    return false\n}\n\nexport const getSurveySeenKey = (survey: Survey): string => {\n    let surveySeenKey = `${SURVEY_SEEN_PREFIX}${survey.id}`\n    if (survey.current_iteration && survey.current_iteration > 0) {\n        surveySeenKey = `${SURVEY_SEEN_PREFIX}${survey.id}_${survey.current_iteration}`\n    }\n\n    return surveySeenKey\n}\n\nconst getSurveyInteractionProperty = (survey: Survey, action: string): string => {\n    let surveyProperty = `$survey_${action}/${survey.id}`\n    if (survey.current_iteration && survey.current_iteration > 0) {\n        surveyProperty = `$survey_${action}/${survey.id}/${survey.current_iteration}`\n    }\n\n    return surveyProperty\n}\n\nexport const hasWaitPeriodPassed = (\n    lastSeenSurveyDate: string | null,\n    waitPeriodInDays: number | undefined\n): boolean => {\n    if (!waitPeriodInDays || !lastSeenSurveyDate) {\n        return true\n    }\n\n    const today = new Date()\n    const diff = Math.abs(today.getTime() - new Date(lastSeenSurveyDate).getTime())\n    const diffDaysFromToday = Math.ceil(diff / (1000 * 3600 * 24))\n    return diffDaysFromToday > waitPeriodInDays\n}\n\ninterface SurveyContextProps {\n    isPreviewMode: boolean\n    previewPageIndex: number | undefined\n    onPopupSurveyDismissed: () => void\n    isPopup: boolean\n    onPreviewSubmit: (res: string | string[] | number | null) => void\n    surveySubmissionId: string\n}\n\nexport const SurveyContext = createContext<SurveyContextProps>({\n    isPreviewMode: false,\n    previewPageIndex: 0,\n    onPopupSurveyDismissed: () => {},\n    isPopup: true,\n    onPreviewSubmit: () => {},\n    surveySubmissionId: '',\n})\n\ninterface RenderProps {\n    component: VNode<{ className: string }>\n    children: string\n    renderAsHtml?: boolean\n    style?: React.CSSProperties\n}\n\nexport const renderChildrenAsTextOrHtml = ({ component, children, renderAsHtml, style }: RenderProps) => {\n    return renderAsHtml\n        ? cloneElement(component, {\n              dangerouslySetInnerHTML: { __html: children },\n              style,\n          })\n        : cloneElement(component, {\n              children,\n              style,\n          })\n}\n\nconst surveyValidationMap: Record<SurveyMatchType, (targets: string[], value: string) => boolean> = {\n    icontains: (targets, value) => targets.some((target) => value.toLowerCase().includes(target.toLowerCase())),\n    not_icontains: (targets, value) => targets.every((target) => !value.toLowerCase().includes(target.toLowerCase())),\n    regex: (targets, value) => targets.some((target) => isMatchingRegex(value, target)),\n    not_regex: (targets, value) => targets.every((target) => !isMatchingRegex(value, target)),\n    exact: (targets, value) => targets.some((target) => value === target),\n    is_not: (targets, value) => targets.every((target) => value !== target),\n}\n\nfunction defaultMatchType(matchType?: SurveyMatchType): SurveyMatchType {\n    return matchType ?? 'icontains'\n}\n\n// use urlMatchType to validate url condition, fallback to contains for backwards compatibility\nexport function doesSurveyUrlMatch(survey: Pick<Survey, 'conditions'>): boolean {\n    if (!survey.conditions?.url) {\n        return true\n    }\n    // if we dont know the url, assume it is not a match\n    const href = window?.location?.href\n    if (!href) {\n        return false\n    }\n    const targets = [survey.conditions.url]\n    return surveyValidationMap[defaultMatchType(survey.conditions?.urlMatchType)](targets, href)\n}\n\nexport function doesSurveyDeviceTypesMatch(survey: Survey): boolean {\n    if (!survey.conditions?.deviceTypes || survey.conditions?.deviceTypes.length === 0) {\n        return true\n    }\n    // if we dont know the device type, assume it is not a match\n    if (!userAgent) {\n        return false\n    }\n\n    const deviceType = detectDeviceType(userAgent)\n    return surveyValidationMap[defaultMatchType(survey.conditions?.deviceTypesMatchType)](\n        survey.conditions.deviceTypes,\n        deviceType\n    )\n}\n\nexport function doesSurveyMatchSelector(survey: Survey): boolean {\n    if (!survey.conditions?.selector) {\n        return true\n    }\n    return !!document?.querySelector(survey.conditions.selector)\n}\n\ninterface InProgressSurveyState {\n    surveySubmissionId: string\n    lastQuestionIndex: number\n    responses: Record<string, string | number | string[] | null>\n}\n\nconst getInProgressSurveyStateKey = (survey: Pick<Survey, 'id' | 'current_iteration'>): string => {\n    let key = `${SURVEY_IN_PROGRESS_PREFIX}${survey.id}`\n    if (survey.current_iteration && survey.current_iteration > 0) {\n        key = `${SURVEY_IN_PROGRESS_PREFIX}${survey.id}_${survey.current_iteration}`\n    }\n    return key\n}\n\nexport const setInProgressSurveyState = (\n    survey: Pick<Survey, 'id' | 'current_iteration'>,\n    state: InProgressSurveyState\n): void => {\n    try {\n        localStorage.setItem(getInProgressSurveyStateKey(survey), JSON.stringify(state))\n    } catch (e) {\n        logger.error('Error setting in-progress survey state in localStorage', e)\n    }\n}\n\nexport const getInProgressSurveyState = (\n    survey: Pick<Survey, 'id' | 'current_iteration'>\n): InProgressSurveyState | null => {\n    try {\n        const stateString = localStorage.getItem(getInProgressSurveyStateKey(survey))\n        if (stateString) {\n            return JSON.parse(stateString) as InProgressSurveyState\n        }\n    } catch (e) {\n        logger.error('Error getting in-progress survey state from localStorage', e)\n    }\n    return null\n}\n\nexport const isSurveyInProgress = (survey: Pick<Survey, 'id' | 'current_iteration'>): boolean => {\n    const state = getInProgressSurveyState(survey)\n    return !isNullish(state?.surveySubmissionId)\n}\n\nexport const clearInProgressSurveyState = (survey: Pick<Survey, 'id' | 'current_iteration'>): void => {\n    try {\n        localStorage.removeItem(getInProgressSurveyStateKey(survey))\n    } catch (e) {\n        logger.error('Error clearing in-progress survey state from localStorage', e)\n    }\n}\n\nexport function getSurveyContainerClass(survey: Pick<Survey, 'id'>, asSelector = false): string {\n    const className = `PostHogSurvey-${survey.id}`\n    return asSelector ? `.${className}` : className\n}\n"]}