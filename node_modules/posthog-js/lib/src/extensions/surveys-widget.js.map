{"version":3,"file":"surveys-widget.js","sourceRoot":"","sources":["../../../src/extensions/surveys-widget.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,QAAQ,IAAI,SAAS,EAAE,MAAM,kBAAkB,CAAA;AACxD,OAAO,EAAE,8BAA8B,EAAE,uBAAuB,EAAE,MAAM,mCAAmC,CAAA;AAC3G,OAAO,EAAE,iBAAiB,EAAE,MAAM,2BAA2B,CAAA;AAC7D,OAAO,YAAY,MAAM,sBAAsB,CAAA;AAE/C,gGAAgG;AAChG,IAAM,QAAQ,GAAG,SAAqB,CAAA;AAEtC,MAAM,UAAU,oBAAoB,CAAC,MAAc,EAAE,OAAiB;IAClE,IAAM,eAAe,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAA;IACvD,IAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAI,eAAe,CAAE,CAA0B,CAAA;IAE1F,IAAI,WAAW,IAAI,WAAW,CAAC,UAAU,EAAE,CAAC;QACxC,OAAO,WAAW,CAAC,UAAU,CAAA;IACjC,CAAC;IAED,iCAAiC;IACjC,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;IACzC,8BAA8B,CAAC,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,CAAA;IACtD,GAAG,CAAC,SAAS,GAAG,eAAe,CAAA;IAC/B,IAAM,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;IACjD,IAAM,UAAU,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAA;IAClD,IAAI,UAAU,EAAE,CAAC;QACb,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAA;IAClC,CAAC;IACD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;IAC9B,OAAO,MAAM,CAAA;AACjB,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,OAAiB;IACpD,OAAO,iBAAiB,CAAC,QAAQ,EAAE,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;AACrG,CAAC","sourcesContent":["import { PostHog } from '../posthog-core'\nimport { Survey } from '../posthog-surveys-types'\nimport { document as _document } from '../utils/globals'\nimport { addSurveyCSSVariablesToElement, getSurveyContainerClass } from './surveys/surveys-extension-utils'\nimport { prepareStylesheet } from './utils/stylesheet-loader'\nimport widgetStyles from './surveys/widget.css'\n\n// We cast the types here which is dangerous but protected by the top level generateSurveys call\nconst document = _document as Document\n\nexport function retrieveWidgetShadow(survey: Survey, posthog?: PostHog) {\n    const widgetClassName = getSurveyContainerClass(survey)\n    const existingDiv = document.querySelector(`.${widgetClassName}`) as HTMLDivElement | null\n\n    if (existingDiv && existingDiv.shadowRoot) {\n        return existingDiv.shadowRoot\n    }\n\n    // If it doesn't exist, create it\n    const div = document.createElement('div')\n    addSurveyCSSVariablesToElement(div, survey.appearance)\n    div.className = widgetClassName\n    const shadow = div.attachShadow({ mode: 'open' })\n    const stylesheet = createWidgetStylesheet(posthog)\n    if (stylesheet) {\n        shadow.appendChild(stylesheet)\n    }\n    document.body.appendChild(div)\n    return shadow\n}\n\nexport function createWidgetStylesheet(posthog?: PostHog) {\n    return prepareStylesheet(document, typeof widgetStyles === 'string' ? widgetStyles : '', posthog)\n}\n"]}